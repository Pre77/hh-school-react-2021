{"version":3,"sources":["localSave.js","components/card/card.jsx","components/card/name.jsx","components/card/photo.jsx","components/settings/blacklist.jsx","components/settings/settings.jsx","components/settings/button.jsx","help/index.jsx","api/contributors.js","App.js","consts.js","reportWebVitals.js","index.js"],"names":["USERNAME","REPOSITORY","BLACKLIST","getSettings","settings","user","localStorage","getItem","repo","blacklist","setItem","JSON","stringify","parse","setSettings","console","log","Card","props","useEffect","className","black","Photo","image","Name","name","onClick","onBlackList","onRemoveBl","src","Blacklist","useState","useRef","Array","isArray","map","value","onDelete","clearAll","Settings","setUser","setRepo","setBlacklist","placeholder","onChange","val","target","onChangeRepo","onAdd","onSaveSettings","title","ButtonSettings","id","text","About","style","useSpring","display","isAbout","to","next","a","transform","from","delay","div","getContributors","rp","replace","fetch","response","json","users","App","setUsers","isSettings","setSettingsVisible","setAbout","setSettingsRaw","setrepo","handleUsersFetch","obj","forceRepo","saveSettings","config","slow","state","addToBlack","indexOf","st","push","deleteFromBlackList","v","splice","changeReviewer","randomReviewer","min","max","usersToRandomize","filter","element","find","t","login","length","Math","floor","random","alert","handleSettings","avatar_url","onNewReviewer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed190df7.chunk.js","sourcesContent":["export const USERNAME = 'userName';\r\nexport const REPOSITORY = 'repository';\r\nexport const BLACKLIST = 'blacklist';\r\n\r\nexport function getSettings() {\r\n    let settings = {};\r\n    let user = localStorage.getItem(USERNAME);\r\n    let repo = localStorage.getItem(REPOSITORY);\r\n    let blacklist = localStorage.getItem(BLACKLIST);\r\n    if (user == null) {\r\n        setNullSettings();\r\n    }\r\n    settings.user = user ? user : 'Pre77';\r\n    settings.repo = repo ? repo : 'https://github.com/Pre77/hh-school-react-2021';\r\n    settings.blacklist = blacklist ? JSON.parse(blacklist) : [];\r\n    return settings;    \r\n}\r\nexport function setSettings(settings) {\r\n    console.log(settings);\r\n    if (settings.user)  localStorage.setItem(USERNAME, settings.user);\r\n    if (settings.repo) localStorage.setItem(REPOSITORY, settings.repo);\r\n    if (settings.blacklist) localStorage.setItem(BLACKLIST, JSON.stringify(settings.blacklist));\r\n    return;\r\n}\r\nexport function setNullSettings() {\r\n    localStorage.setItem(USERNAME, 'Pre77');\r\n    localStorage.setItem(REPOSITORY, 'https://github.com/Pre77/hh-school-react-2021');\r\n    localStorage.setItem(BLACKLIST, JSON.stringify([])); \r\n}","import React, { useEffect } from 'react'\r\nimport { Name, Photo } from './'\r\n\r\nexport function Card(props) {\r\n    useEffect(() => {\r\n    })\r\n    return (\r\n        <div className={`review_card ${props.black ? 'black_label' : ''}`}\r\n        >\r\n            <Photo image={props.image} />\r\n            <Name name={props.name} />\r\n            { (props.onClick || props.onBlackList) ?\r\n                <div className=\"review_buttons\">\r\n                    {props.onClick ? <button onClick={() => { if (props.onClick) { props.onClick(props.name) } }}>Review</button> : <></>}\r\n                    {props.onBlackList && !props.black ? <button onClick={() => { if (props.onBlackList) { props.onBlackList(props.name) } }}>В черный список</button> : <></>}\r\n                    {props.onRemoveBl && props.black ? <button onClick={() => { if (props.onRemoveBl) { props.onRemoveBl(props.name) } }}>Удалить из ЧС</button> : <></>}\r\n                </div>\r\n                : <></>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport function Name(props) {\r\n    return (\r\n        <div>\r\n            {props.name}\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport function Photo(props) {\r\n    return (\r\n        <img className=\"image\" src={props.image}/>\r\n    );\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nexport function Blacklist(props) {\r\n    const [list, useList] = useState(props.blacklist);\r\n    const val = useRef(null);\r\n    useEffect(() => {\r\n        console.log(props)\r\n    }, []);\r\n    return (\r\n        <>\r\n            <ul>\r\n                {\r\n                    Array.isArray(props.blacklist) ? props.blacklist.map((value) => {\r\n                        return <li key={value}><span>{value}</span><button onClick={() => { props.onDelete(value) }}>-</button></li>\r\n                    }) : <></>\r\n                }\r\n            </ul>\r\n            <button onClick={() => props.clearAll()}>Очистить список</button>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Blacklist } from './blacklist'\r\n\r\nexport function Settings(props) {\r\n    const [user, setUser] = useState(props.user);\r\n    const [repo, setRepo] = useState(props.repo);\r\n    const [blacklist, setBlacklist] = useState(props.blacklist);\r\n    useEffect(() => {\r\n        setUser(props.user);\r\n        setRepo(props.repo);\r\n        setBlacklist(props.blacklist);\r\n        return null;\r\n    })\r\n    //            <!--button onClick={() => { if (props.onNewReviewer) { props.onNewReviewer() } }}>Новый ревьювер</button>\r\n    return (\r\n        <>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Логин ревьювера</td>\r\n                        <td><input placeholder=\"login\" value={props.user} onChange={(val) => {\r\n                            setUser(val.target.value)\r\n                        }} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ссылка на репозиторий</td>\r\n                        <td><input placeholder=\"repository\" value={props.repo} onChange={(val) => { props.onChangeRepo(val.target.value) }} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Черный список</td>\r\n                        <td><Blacklist\r\n                            onAdd={(val) => { if (props.onAdd) { props.onAdd(val); } }}\r\n                            onDelete={(val) => { if (props.onDelete) { props.onDelete(val) } }}\r\n                            clearAll={() => { if (props.clearAll) { props.clearAll() } }}\r\n                            blacklist={props.blacklist} /></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <button onClick={() => {\r\n                if (props.onSaveSettings) {\r\n                    props.onSaveSettings({\r\n                        user: props.user, repo: props.repo, blacklist: props.blacklist\r\n                    })\r\n                }\r\n            }}\r\n            title='Если вручную меняем имя пользователя и репозиторий'\r\n            >Сохранить настройки</button>\r\n        </>\r\n    );\r\n}","import { useEffect } from \"react\";\r\n\r\nexport function ButtonSettings(props) {\r\n    useEffect(() => {\r\n\r\n    },[]);\r\n    return (\r\n        <>\r\n            <button onClick={()=>{  if (props.onClick) {props.onClick()}}} id=\"settings-button\">{props.text}</button>\r\n        </>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { config } from 'react-spring';\r\nimport { Menu } from '../consts';\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { delay } from 'delay'\r\n\r\nexport function About(props) {\r\n    const style = useSpring({\r\n        display: props.isAbout ? 'block' : 'none',\r\n        to: async next => {\r\n            await next({\r\n                transform: 'translateX(0%)',\r\n            });\r\n        },\r\n        from: async next => {\r\n            await delay(700);\r\n            await next({\r\n                transform: 'translateX(-100%)',\r\n            });\r\n        },\r\n    })\r\n    return (\r\n\r\n        <>\r\n            <animated.div id='help' style={{...style, display: props.isAbout ? 'block' :'none' }}>\r\n                <h1>Задание по React</h1>\r\n                <p>Нужно сделать одностраничное приложение, которое помогает найти ревьюера.</p>\r\n                <p>Функционал:</p>\r\n                <ul>\r\n                    <li>кнопка настроек, по клику на нее можно переключать видимость настроек.</li>\r\n                    <li>в настройках 3 поля:\r\n                        <ul>\r\n                            <li>login для ввода логина текущего юзера</li>\r\n                            <li>repo для указания репозитория для которого ищем ревьюера</li>\r\n                            <li>blacklist для указания списка login-ов, кто не должен быть ревьюером</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>состояние настроек сохранять в localStorage</li>\r\n                    <li>для генерации ревьюера нужна кнопка поиска ревьюера, по клику на которую должен быть выбран рандомный ревьюер из\r\n                            списка контрибьютеров репзитория указанный в пункте 2 настроек, учитывая blacklist пункта 3.</li>\r\n                    <li>при генерации ревьюера показываем текущего пользователя и перебираемые вами пользователи для ревью.</li>\r\n                </ul>\r\n                <p>Дока по API https://docs.github.com/en/rest. Пример, как может выглядеть блок с ревьюером.</p>\r\n                <p>Макетов нет, можно делать на ваш вкус и цвет, включайте фантазию). Оцениваться будет реализация, а не визуальная часть.\r\n                        При написании используем только функциональные компоненты, класс компоненты запрещены.</p>\r\n            </animated.div>\r\n        </>\r\n    );\r\n}","// /repos/:owner/:repo/contributors\r\nexport async function getContributors(repo) {\r\n    let rp = repo.replace('https://github.com/','');\r\n    const response = await fetch(`https://api.github.com/repos/${rp}/contributors`);\r\n    let users = await response.json();\r\n    return users;\r\n}","import { useEffect, useState } from 'react';\r\nimport { getSettings, setSettings as saveSettings } from './localSave'\r\nimport { config } from 'react-spring';\r\nimport './App.css';\r\nimport { Card, Settings, ButtonSettings } from './components'\r\nimport { About } from './help';\r\nimport { getContributors } from './api/contributors';\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { delay } from 'delay'\r\nimport { getRandomArbitrary } from './consts'\r\nimport { render } from '@testing-library/react';\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState(null);\r\n  const [isSettings, setSettingsVisible] = useState(null);\r\n  const [isAbout, setAbout] = useState(false);\r\n  const [settings, setSettingsRaw] = useState({ blacklist: [], user: '', repo: '' });\r\n  const [blacklist, setBlacklist] = useState([]);\r\n  const [user, setUser] = useState('');\r\n  const [repo, setrepo] = useState('');\r\n  async function handleUsersFetch(repo) {\r\n    setUsers(await getContributors(repo));\r\n    return;\r\n  }\r\n  function setSettings(obj, forceRepo = false) {\r\n    if (forceRepo) {\r\n      handleUsersFetch(obj.repo)\r\n    }\r\n    setSettingsRaw(obj);\r\n    saveSettings(obj)\r\n    setUser(obj.user);\r\n    setrepo(obj.repo);\r\n    Array.isArray(obj.blacklist) ? setBlacklist([...obj.blacklist]) : setBlacklist([]);\r\n  }\r\n  function handleSettings() {\r\n    let st = getSettings();\r\n    setSettings(st);\r\n    handleUsersFetch(st.repo);\r\n    return;\r\n  }\r\n  //    //unique,\r\n  const style = useSpring({\r\n    ...config.slow,\r\n    state: isSettings ? 'in' : 'out',\r\n    to: async next => {\r\n      await next({\r\n        transform: 'translateX(0%)',\r\n      });\r\n    },\r\n    from: async next => {\r\n      await delay(700);\r\n      await next({\r\n        transform: 'translateX(-100%)',\r\n      });\r\n    },\r\n  });\r\n  function addToBlack(val) {\r\n    let v = settings.blacklist.indexOf(val);\r\n    if (v < 0) {\r\n      let st = {};\r\n      st = settings;\r\n      st.blacklist.push(val);\r\n      setSettings(st);\r\n    }\r\n  }\r\n  function deleteFromBlackList(user) {\r\n    let v = settings.blacklist.indexOf(user);\r\n    let st = settings;\r\n    if (v >= 0) {\r\n      st.blacklist.splice(v, 1);\r\n      setSettings(st);\r\n    }\r\n  }\r\n  function changeReviewer(user) { let st = { user: user, repo: settings.repo, blacklist: settings.blacklist }; setSettings(st); }\r\n  function randomReviewer() {\r\n    let usersToRandomize = users.filter((element) => { return settings.blacklist.find(t => t == element.login) ? false : true; });\r\n    if (usersToRandomize.length > 0) {\r\n      let random = getRandomArbitrary(0, usersToRandomize.length);\r\n      changeReviewer(usersToRandomize[random].login);\r\n    } else {\r\n      alert(\"Нет пользователей для review! Проверьте настройки...\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    handleSettings();\r\n    return;\r\n  }, []); // onClick={(state) => {state ? setSettingsVisible(false) : setSettingsVisible(true);}}\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"buttons\">\r\n        <ButtonSettings text='Настройки' onClick={() => { isSettings ? setSettingsVisible(false) : setSettingsVisible(true); }} />\r\n        <ButtonSettings text='Рандомный reviewer' onClick={() => { randomReviewer() }} />\r\n        <ButtonSettings text='Задание' onClick={() => {\r\n          isAbout ? setAbout(false) : setAbout(true);\r\n        }} />\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <About isAbout={isAbout} />\r\n        <animated.div className=\"sidebar\">\r\n          <Card black={blacklist.find(t => t == user) ? true : false}\r\n            name={user}\r\n            image={Array.isArray(users) ? (users.find(t => t.login == user) ? users.find(t => t.login == user).avatar_url : '') : ''}\r\n          />\r\n          <animated.div style={{ ...style, display: isSettings ? 'block' : 'none' }}>\r\n            <Settings blacklist={[...blacklist]} user={user} repo={repo}\r\n              onNewReviewer={() => {\r\n                handleUsersFetch(settings.repo);\r\n              }}\r\n              onChangeRepo = {(repo) => {setrepo(repo)}}\r\n              clearAll = {() => { setSettings({user: user, repo: repo, blacklist: []})}}\r\n              onSaveSettings={(settings) => { setSettings(settings, true); }}\r\n              onAdd={addToBlack}\r\n              onDelete={deleteFromBlackList} />\r\n          </animated.div>\r\n        </animated.div>\r\n        <div className=\"content\">\r\n          {Array.isArray(users) ? users.map((value) => {\r\n            return <Card black={[...blacklist].find(t => t == value.login) ? true : false} key={value.id} name={value.login} image={value.avatar_url} onBlackList={addToBlack} onRemoveBl={deleteFromBlackList} onClick={changeReviewer} />\r\n          }) : ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export function getRandomArbitrary(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}