{"version":3,"sources":["api/contributors.js","components/card/card.jsx","components/card/name.jsx","components/card/photo.jsx","components/settings/blacklist.jsx","components/settings/settings.jsx","components/settings/button.jsx","consts.js","help/index.jsx","store/actions/types.js","store/actions/settingsActions.js","App.js","store/actions/appsateActions.js","localSave.js","reportWebVitals.js","store/reducers/appstate.js","store/reducers/settings.js","store/reducers/users.js","store/reducers/index.js","store/store.js","index.js"],"names":["repo","a","rp","replace","fetch","response","ok","json","console","log","RECEIVE_USERS","fetchUsers","dispatch","type","requesUsers","then","error","users","receiveUsers","catch","Card","props","className","black","Photo","image","Name","name","onClick","onBlackList","onRemoveBl","src","Blacklist","Array","isArray","blacklist","map","value","onDelete","clearAll","Settings","placeholder","defaultValue","user","readOnly","onChange","val","onChangeRepo","target","onAdd","onSaveSettings","title","ButtonSettings","id","text","DEFAULT_REPO","DEFAULT_USER","DEFAULT_BLACKLIST","About","style","useSpring","display","isAbout","to","next","transform","from","delay","div","SET_REPO","ADD_BLACKLIST","REMOVE_BLACKLIST","CLEAR_BLACKLIST","SET_USER","SETTINGS_PANEL_ON","SETTINGS_PANEL_OFF","ABOUT_PANEL_ON","ABOUT_PANEL_OFF","setRepo","content","payload","App","useSelector","state","settings","shallowEqual","useDispatch","isSettings","appstate","about","config","slow","addToBlack","deleteFromBlackList","changeReviewer","setUser","setAbout","setSettingsVisible","min","max","usersToRandomize","filter","element","includes","login","length","Math","floor","random","alert","find","t","avatar_url","onNewReviewer","USERNAME","REPOSITORY","BLACKLIST","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","i","indexOf","push","v","splice","reducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","enhancer","applyMiddleware","st","localStorage","getItem","setItem","JSON","stringify","parse","getSettings","initialStore","Object","values","getContributors","store","createStore","ReactDOM","render","StrictMode","document","getElementById","getState","subscribe","setSettings"],"mappings":"mSACO,WAA+BA,GAA/B,iBAAAC,EAAA,6DACDC,EAAKF,EAAKG,QAAQ,sBAAuB,IADxC,kBAGoBC,MAAM,gCAAD,OAAiCF,EAAjC,kBAHzB,YAGGG,EAHH,QAIaC,GAJb,iCAIwBD,EAASE,OAJjC,gDAI0C,GAJ1C,gFAMHC,QAAQC,IAAR,MANG,kBAOI,IAPJ,2D,sBAmBA,IAAMC,EAAgB,gBAgBtB,SAASC,EAAWX,GACzB,IAAIE,EAAKF,EAAKG,QAAQ,sBAAuB,IAC7C,OAAO,SAAUS,GAGf,OAFAA,EA1BG,SAAqBZ,GAC1B,MAAO,CACLa,KAHyB,gBAIzBb,QAuBSc,CAAYd,IAEdI,MAAM,gCAAD,OAAiCF,EAAjC,kBACTa,MACC,SAAAV,GAAQ,OAAIA,EAASE,UACrB,SAAAS,GAAK,OAAIR,QAAQC,IAAI,qBAAsBO,MAE5CD,MAAK,SAAAR,GAAI,OACRK,EA1BR,SAAsBZ,EAAMO,GAC1B,MAAO,CACLM,KAAMH,EACNV,OACAiB,MAAOV,GAsBMW,CAAalB,EAAMO,OAC5BY,OAAM,kBAAMX,QAAQC,IAAI,kB,iDC7CzB,SAASW,EAAKC,GACjB,OACI,sBAAKC,UAAS,sBAAiBD,EAAME,MAAQ,cAAgB,IAA7D,UAEI,cAACC,EAAD,CAAOC,MAAOJ,EAAMI,QACpB,cAACC,EAAD,CAAMC,KAAMN,EAAMM,OACfN,EAAMO,SAAWP,EAAMQ,YACtB,sBAAKP,UAAU,iBAAf,UACKD,EAAMO,QAAU,wBAAQA,QAAS,WAAYP,EAAMO,SAAWP,EAAMO,QAAQP,EAAMM,OAAlE,oBAA+F,6BAC/GN,EAAMQ,cAAgBR,EAAME,MAAQ,wBAAQK,QAAS,WAAYP,EAAMQ,aAAeR,EAAMQ,YAAYR,EAAMM,OAA1E,8FAAgH,6BACpJN,EAAMS,YAAcT,EAAME,MAAQ,wBAAQK,QAAS,WAAYP,EAAMS,YAAcT,EAAMS,WAAWT,EAAMM,OAAxE,kFAA4G,gCAEjJ,QCbX,SAASD,EAAKL,GACjB,OACI,8BACKA,EAAMM,OCHZ,SAASH,EAAMH,GAClB,OACI,qBAAKC,UAAU,QAAQS,IAAKV,EAAMI,QCFnC,SAASO,EAAUX,GACtB,OACI,qCACI,6BAEQY,MAAMC,QAAQb,EAAMc,WAAad,EAAMc,UAAUC,KAAI,SAACC,GAClD,OAAO,+BAAgB,+BAAOA,IAAa,wBAAQT,QAAS,WAAQP,EAAMiB,SAASD,IAAxC,iBAA3BA,MACf,OAGb,wBAAQT,QAAS,kBAAMP,EAAMkB,YAA7B,sGCTL,SAASC,EAASnB,GACrB,OACI,qCACI,gCACI,kCACI,+BACI,uHACA,6BAAI,uBAAOoB,YAAY,QAAQC,aAAcrB,EAAMsB,KAAMC,UAAU,SAEvE,+BACI,sJACA,6BAAI,uBAAOH,YAAY,aAAaJ,MAAOhB,EAAMrB,KAAM6C,SAAU,SAACC,GAAUzB,EAAM0B,aAAaD,EAAIE,OAAOX,eAE9G,+BACI,2GACA,6BACI,cAACL,EAAD,CACIiB,MAAO,SAACH,GAAczB,EAAM4B,OAAS5B,EAAM4B,MAAMH,IACjDR,SAAU,SAACQ,GAAczB,EAAMiB,UAAYjB,EAAMiB,SAASQ,IAC1DP,SAAU,WAAYlB,EAAMkB,UAAYlB,EAAMkB,YAC9CJ,UAAWd,EAAMc,sBAMrC,wBAAQP,QAAS,WACTP,EAAM6B,gBACN7B,EAAM6B,eAAe,CACjBP,KAAMtB,EAAMsB,KAAM3C,KAAMqB,EAAMrB,KAAMmC,UAAWd,EAAMc,aAI7DgB,MAAM,iRAPV,8HC3BL,SAASC,EAAe/B,GAC3B,OACI,wBAAQO,QAAS,WAAYP,EAAMO,SAAWP,EAAMO,WAAeyB,GAAG,kBAAtE,SAAyFhC,EAAMiC,OCJhG,IAAMC,EAAe,gDACfC,EAAe,QACfC,EAAoB,GCC1B,SAASC,EAAMrC,GAClB,IAAMsC,EAAQC,YAAU,CACpBC,QAASxC,EAAMyC,QAAU,QAAU,OACnCC,GAAG,WAAD,4BAAE,WAAMC,GAAN,SAAA/D,EAAA,sEACM+D,EAAK,CACPC,UAAW,mBAFf,2CAAF,mDAAC,GAKHC,KAAK,WAAD,4BAAE,WAAMF,GAAN,SAAA/D,EAAA,sEACIkE,gBAAM,KADV,uBAEIH,EAAK,CACPC,UAAW,sBAHb,2CAAF,mDAAC,KAOT,OACI,eAAC,IAASG,IAAV,CAAcf,GAAG,OAAOM,MAAK,2BAAOA,GAAP,IAAcE,QAASxC,EAAMyC,QAAU,QAAU,SAA9E,UACI,+FACA,0aACA,8FACA,+BACI,+YACA,iIACQ,+BACA,8MACA,2TACA,mUAGR,oNACA,8hCAEA,2jBAEJ,kVACA,8kCCtCL,IAAMO,EAAW,WACXC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAW,WAEXC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAAiB,iBACjBC,EAAkB,kBCRlBC,EAAU,SAAAC,GAAO,MAAK,CAC/BlE,KAAMwD,EACNW,QAASD,ICmGEE,MA5Ff,WAAgB,IAAD,IACPjF,EAAOkF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASpF,OAAMqF,KACjD1C,EAAOuC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASzC,OAAM0C,KACjDlD,EAAY+C,aAAY,SAAAC,GAAK,mBAAQA,EAAMC,SAASjD,aAAYkD,KAChEpE,EAAQiE,aAAY,SAAAC,GAAK,OAAIA,EAAMlE,QAAOoE,KAC1CzE,EAAW0E,cACXC,EAAaL,aAAY,SAAAC,GAAK,OAAIA,EAAMK,SAASJ,WAAUC,KAC3DvB,EAAUoB,aAAY,SAAAC,GAAK,OAAIA,EAAMK,SAASC,QAAOJ,KAErD1B,EAAQC,YAAU,2BACnB8B,IAAOC,MADW,IAErBR,MAAOI,EAAa,KAAO,MAC3BxB,GAAG,WAAD,4BAAE,WAAMC,GAAN,SAAA/D,EAAA,sEACI+D,EAAK,CACTC,UAAW,mBAFX,2CAAF,mDAAC,GAKHC,KAAK,WAAD,4BAAE,WAAMF,GAAN,SAAA/D,EAAA,sEACEkE,gBAAM,KADR,uBAEEH,EAAK,CACTC,UAAW,sBAHT,2CAAF,mDAAC,MAOP,SAAS2B,EAAW9C,GAClBlC,EDvBkC,CAClCC,KAAMyD,EACNU,QCqBsBlC,IAExB,SAAS+C,EAAoBlD,GAC3B/B,ED9BqC,CACrCC,KAAM0D,EACNS,QC4ByBrC,IAE3B,SAASmD,EAAenD,GACtB/B,EDzBmB,SAAA+B,GAAI,MAAK,CAC5B9B,KAAM4D,EACNO,QAASrC,GCuBAoD,CAAQpD,IAWnB,SAASqD,EAASb,GACRvE,EAARuE,EC9C0B,CAC1BtE,KAAM+D,GAEqB,CAC3B/D,KAAMgE,ID4CR,SAASoB,EAAmBd,GAClBvE,EAARuE,ECvD6B,CAC7BtE,KAAM6D,GAEyB,CAC/B7D,KAAM8D,IDqDR,OACE,sBAAKrD,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC8B,EAAD,CAAgBE,KAAK,yDAAY1B,QAAS,WAAQqE,GAAoBV,MACtE,cAACnC,EAAD,CAAgBE,KAAK,kEAAqB1B,QAnBhD,WACE,IJzC+BsE,EAAKC,EIyChCC,EAAmBnF,EAAMoF,QAAO,SAACC,GAAc,OAAQ,YAAInE,GAAWoE,SAASD,EAAQE,UACvFJ,EAAiBK,OAAS,EAE5BX,EAAeM,GJ5CcF,EI2CG,EJ3CEC,EI2CCC,EAAiBK,OJ1CjDC,KAAKC,MAAMD,KAAKE,UAAYT,EAAMD,GAAOA,KI2CJM,OAExCK,MAAM,oPAcJ,cAACzD,EAAD,CAAgBE,KAAK,6CAAU1B,QAAS,WAAQoE,GAAUlC,SAE5D,sBAAKxC,UAAU,UAAf,UACE,cAACoC,EAAD,CAAOI,QAASA,IAChB,eAAC,IAASM,IAAV,CAAc9C,UAAU,UAAxB,UACE,cAACF,EAAD,CAAMG,MAAO,YAAIY,GAAWoE,SAAS5D,GACnChB,KAAMgB,EACNlB,MAAK,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAO6F,YAAT,iBAAE,OAAA7F,GAAc,SAAA8F,GAAC,OAAIA,EAAEP,QAAU7D,YAAjC,aAAE,EAAsCqE,aAE/C,cAAC,IAAS5C,IAAV,CAAcT,MAAK,2BAAOA,GAAP,IAAcE,QAAS0B,EAAa,QAAU,SAAjE,SACE,cAAC/C,EAAD,CAAUL,UAAS,YAAMA,GAAYQ,KAAMA,EAAM3C,KAAMA,EACrDiH,cAAe,aAGflE,aAAc,SAAC/C,GACbY,EAASkE,EAAQ9E,IACjBY,EAASD,EAAWX,KAEtBuC,SAAU,WACR3B,ED7EqB,CACjCC,KAAM2D,KC8EItB,eAAgB,SAACkC,GACfxE,EAASkE,EAAQ9E,IACjBY,EAASD,EAAWX,KAEtBiD,MAAO2C,EACPtD,SAAUuD,SAGhB,qBAAKvE,UAAU,UAAf,SACGW,MAAMC,QAAQjB,GAASA,EAAMmB,KAAI,SAACC,GACjC,OAAO,cAACjB,EAAD,CAAMG,MAAO,YAAIY,GAAWoE,SAASlE,EAAMmE,OAAuB7E,KAAMU,EAAMmE,MAAO/E,MAAOY,EAAM2E,WAAYnF,YAAa+D,EAAY9D,WAAY+D,EAAqBjE,QAASkE,GAAzHzD,EAAMgB,OAClE,cEhGF6D,G,MAAW,YACXC,EAAa,aACbC,EAAY,YCFzB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxG,MAAK,YAAkD,IAA/CyG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,eCaC9B,EAnBE,WAAwD,IAAvDL,EAAsD,uDAA9C,CAAEM,OAAO,EAAOL,UAAU,GAASyC,EAAW,uCACnE,OAAQA,EAAOhH,MACV,KAAK6D,EAEA,OADAS,EAAMC,UAAW,EACVD,EACZ,KAAKR,EAEA,OADAQ,EAAMC,UAAW,EACVD,EACZ,KAAKP,EAEA,OADAO,EAAMM,OAAQ,EACPN,EACZ,KAAKN,EAEA,OADAM,EAAMM,OAAQ,EACPN,EACZ,QACK,OAAOA,ICePC,EA5BE,WAA+F,IAA9FD,EAA6F,uDAArF,CAAEnF,KAAMuD,EAAcZ,KAAMa,EAAcrB,UAAWsB,GAAqBoE,EAAW,uCAC3G,OAAQA,EAAOhH,MACX,KAAKwD,EAED,OADAc,EAAMnF,KAAO6H,EAAO7C,QACbG,EACX,KAAKb,EACD,IAAIwD,EAAI3C,EAAMhD,UAAU4F,QAAQF,EAAO7C,SAIvC,OAHI8C,EAAI,GACJ3C,EAAMhD,UAAU6F,KAAKH,EAAO7C,SAEzBG,EACX,KAAKZ,EACD,IAAI0D,EAAI9C,EAAMhD,UAAU4F,QAAQF,EAAO7C,SAIvC,OAHIiD,GAAK,GACL9C,EAAMhD,UAAU+F,OAAOD,EAAG,GAEvB9C,EACX,KAAKX,EAED,OADAW,EAAMhD,UAAY,GACXgD,EACX,KAAKV,EAED,OADAU,EAAMxC,KAAOkF,EAAO7C,QACbG,EACX,QACI,OAAOA,ICfJlE,EAVD,WAAyB,IAAxBkE,EAAuB,uDAAf,GAAI0C,EAAW,uCAClC,OAAQA,EAAOhH,MACX,KAAKH,EAED,OADAyE,EAAQ0C,EAAO5G,MAEnB,QACI,OAAOkE,ICHNgD,EAAUC,YAAgB,CAAChD,WAAUI,WAAUvE,UCGtDoH,EACc,kBAAXC,QACLA,OAAOC,qCACPD,OAAOC,qCAAqC,IACvCC,IACHC,EAAa,CAACC,KACdC,EAAWN,EACfO,IAAe,WAAf,EAAmBH,IAGjBI,ENdG,WACH,IAAIzD,EAAW,GACXzC,EAAOmG,aAAaC,QAAQ7B,GAC5BlH,EAAO8I,aAAaC,QAAQ5B,GAC5BhF,EAAY2G,aAAaC,QAAQ3B,GAOrC,OANY,MAARzE,IAeJmG,aAAaE,QAAQ9B,EAAU,SAC/B4B,aAAaE,QAAQ7B,EAAY,iDACjC2B,aAAaE,QAAQ5B,EAAW6B,KAAKC,UAAU,MAd/C9D,EAASzC,KAAOA,GAAc,QAC9ByC,EAASpF,KAAOA,GAAc,gDAC9BoF,EAASjD,UAAYA,EAAY8G,KAAKE,MAAMhH,GAAa,GAClDiD,EMGFgE,GAEHC,GAAe,CACnBjE,SAAUyD,EACVrD,SAAU,CAAEJ,UAAU,EAAOK,OAAO,GACpCxE,MAAOqI,OAAOC,OnBtBT,SAAP,kCmBsBuBC,CAAgBX,EAAG7I,QAQ3ByJ,GALDC,YACZvB,EAASkB,GACTV,GClBFgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAE1BN,GAAM7I,SAASD,EAAW8I,GAAMO,WAAW5E,SAASpF,OACpDyJ,GAAMQ,WAAU,YPFT,SAAqB7E,GACpBA,EAASzC,MAAMmG,aAAaE,QAAQ9B,EAAU9B,EAASzC,MACvDyC,EAASpF,MAAM8I,aAAaE,QAAQ7B,EAAY/B,EAASpF,MACzDoF,EAASjD,WAAW2G,aAAaE,QAAQ5B,EAAW6B,KAAKC,UAAU9D,EAASjD,YOClF+H,CADeT,GAAMO,WAAW5E,aAMlCiC,M","file":"static/js/main.d3004fa2.chunk.js","sourcesContent":["// /repos/:owner/:repo/contributors\r\nexport async function getContributors(repo) {\r\n  let rp = repo.replace('https://github.com/', '');\r\n  try {\r\n    const response = await fetch(`https://api.github.com/repos/${rp}/contributors`);\r\n    return response.ok ? await response.json() : [];\r\n  } catch (Exception) {\r\n    console.log(Exception);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport const REQUEST_USERS = 'REQUEST_USERS'\r\nexport function requesUsers(repo) {\r\n  return {\r\n    type: REQUEST_USERS,\r\n    repo\r\n  }\r\n}\r\n\r\nexport const RECEIVE_USERS = 'RECEIVE_USERS'\r\nfunction receiveUsers(repo, json) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    repo,\r\n    users: json\r\n  }\r\n}\r\n\r\nexport const INVALIDATE_USERS = 'INVALIDATE_USERS'\r\nexport function invalidateUsers(repo) {\r\n  return {\r\n    type: INVALIDATE_USERS,\r\n    repo\r\n  }\r\n}\r\nexport function fetchUsers(repo) {\r\n  let rp = repo.replace('https://github.com/', '');\r\n  return function (dispatch) {\r\n    dispatch(requesUsers(repo))\r\n\r\n    return fetch(`https://api.github.com/repos/${rp}/contributors`)\r\n      .then(\r\n        response => response.json(),\r\n        error => console.log('An error occurred.', error)\r\n      )\r\n      .then(json =>\r\n        dispatch(receiveUsers(repo, json))\r\n      ).catch(() => console.log('some error'));\r\n  }\r\n}","import React from 'react'\r\nimport { Name, Photo } from './'\r\n\r\nexport function Card(props) {\r\n    return (\r\n        <div className={`review_card ${props.black ? 'black_label' : ''}`}\r\n        >\r\n            <Photo image={props.image} />\r\n            <Name name={props.name} />\r\n            { (props.onClick || props.onBlackList) ?\r\n                <div className=\"review_buttons\">\r\n                    {props.onClick ? <button onClick={() => { if (props.onClick) { props.onClick(props.name) } }}>Review</button> : <></>}\r\n                    {props.onBlackList && !props.black ? <button onClick={() => { if (props.onBlackList) { props.onBlackList(props.name) } }}>В черный список</button> : <></>}\r\n                    {props.onRemoveBl && props.black ? <button onClick={() => { if (props.onRemoveBl) { props.onRemoveBl(props.name) } }}>Удалить из ЧС</button> : <></>}\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport function Name(props) {\r\n    return (\r\n        <div>\r\n            {props.name}\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport function Photo(props) {\r\n    return (\r\n        <img className=\"image\" src={props.image}/>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport function Blacklist(props) {\r\n    return (\r\n        <>\r\n            <ul>\r\n                {\r\n                    Array.isArray(props.blacklist) ? props.blacklist.map((value) => {\r\n                        return <li key={value}><span>{value}</span><button onClick={() => { props.onDelete(value) }}>-</button></li>\r\n                    }) : null\r\n                }\r\n            </ul>\r\n            <button onClick={() => props.clearAll()}>Очистить список</button>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Blacklist } from './blacklist';\r\n\r\nexport function Settings(props) {\r\n    return (\r\n        <>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Логин ревьювера</td>\r\n                        <td><input placeholder=\"login\" defaultValue={props.user} readOnly={true} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ссылка на репозиторий</td>\r\n                        <td><input placeholder=\"repository\" value={props.repo} onChange={(val) => { props.onChangeRepo(val.target.value) }} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Черный список</td>\r\n                        <td>\r\n                            <Blacklist\r\n                                onAdd={(val) => { if (props.onAdd) { props.onAdd(val); } }}\r\n                                onDelete={(val) => { if (props.onDelete) { props.onDelete(val) } }}\r\n                                clearAll={() => { if (props.clearAll) { props.clearAll() } }}\r\n                                blacklist={props.blacklist} />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <button onClick={() => {\r\n                if (props.onSaveSettings) {\r\n                    props.onSaveSettings({\r\n                        user: props.user, repo: props.repo, blacklist: props.blacklist\r\n                    })\r\n                }\r\n            }}\r\n                title='Если вручную меняем имя пользователя и репозиторий'\r\n            >Сохранить настройки</button>\r\n        </>\r\n    );\r\n}","import { useEffect } from \"react\";\r\n\r\nexport function ButtonSettings(props) {\r\n    return (\r\n        <button onClick={() => { if (props.onClick) { props.onClick() } }} id=\"settings-button\">{props.text}</button>\r\n    );\r\n}","export const DEFAULT_REPO = \"https://github.com/Pre77/hh-school-react-2021\";\r\nexport const DEFAULT_USER = \"Pre77\";\r\nexport const DEFAULT_BLACKLIST = [];\r\n\r\nexport function getRandomArbitrary(min, max) {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}","import { delay } from 'delay';\r\nimport { animated, useSpring } from 'react-spring';\r\n\r\nexport function About(props) {\r\n    const style = useSpring({\r\n        display: props.isAbout ? 'block' : 'none',\r\n        to: async next => {\r\n            await next({\r\n                transform: 'translateX(0%)',\r\n            });\r\n        },\r\n        from: async next => {\r\n            await delay(700);\r\n            await next({\r\n                transform: 'translateX(-100%)',\r\n            });\r\n        },\r\n    })\r\n    return (\r\n        <animated.div id='help' style={{ ...style, display: props.isAbout ? 'block' : 'none' }}>\r\n            <h1>Задание по React</h1>\r\n            <p>Нужно сделать одностраничное приложение, которое помогает найти ревьюера.</p>\r\n            <p>Функционал:</p>\r\n            <ul>\r\n                <li>кнопка настроек, по клику на нее можно переключать видимость настроек.</li>\r\n                <li>в настройках 3 поля:\r\n                        <ul>\r\n                        <li>login для ввода логина текущего юзера</li>\r\n                        <li>repo для указания репозитория для которого ищем ревьюера</li>\r\n                        <li>blacklist для указания списка login-ов, кто не должен быть ревьюером</li>\r\n                    </ul>\r\n                </li>\r\n                <li>состояние настроек сохранять в localStorage</li>\r\n                <li>для генерации ревьюера нужна кнопка поиска ревьюера, по клику на которую должен быть выбран рандомный ревьюер из\r\n                            списка контрибьютеров репзитория указанный в пункте 2 настроек, учитывая blacklist пункта 3.</li>\r\n                <li>при генерации ревьюера показываем текущего пользователя и перебираемые вами пользователи для ревью.</li>\r\n            </ul>\r\n            <p>Дока по API https://docs.github.com/en/rest. Пример, как может выглядеть блок с ревьюером.</p>\r\n            <p>Макетов нет, можно делать на ваш вкус и цвет, включайте фантазию). Оцениваться будет реализация, а не визуальная часть.\r\n                        При написании используем только функциональные компоненты, класс компоненты запрещены.</p>\r\n        </animated.div>\r\n    );\r\n}","export const SET_REPO = \"SET_REPO\"; \r\nexport const ADD_BLACKLIST = \"ADD_BLACKLIST\";\r\nexport const REMOVE_BLACKLIST = \"REMOVE_BLACKLIST\";\r\nexport const CLEAR_BLACKLIST = \"CLEAR_BLACKLIST\";\r\nexport const SET_USER = \"SET_USER\";\r\n\r\nexport const SETTINGS_PANEL_ON = \"SETTINGS_PANEL_ON\";\r\nexport const SETTINGS_PANEL_OFF = \"SETTINGS_PANEL_OFF\";\r\n\r\nexport const ABOUT_PANEL_ON = \"ABOUT_PANEL_ON\";\r\nexport const ABOUT_PANEL_OFF = \"ABOUT_PANEL_OFF\";","import { ADD_BLACKLIST, CLEAR_BLACKLIST, REMOVE_BLACKLIST, SET_REPO, SET_USER } from './'\r\n\r\nexport const setRepo = content => ({\r\n    type: SET_REPO,\r\n    payload: content\r\n})\r\nexport const clearBlacklist = () => ({\r\n    type: CLEAR_BLACKLIST\r\n})\r\nexport const removeBlacklist = value => ({\r\n    type: REMOVE_BLACKLIST,\r\n    payload: value\r\n})\r\nexport const addBlacklist = value => ({\r\n    type: ADD_BLACKLIST,\r\n    payload: value\r\n})\r\nexport const setUser = user => ({\r\n    type: SET_USER,\r\n    payload: user\r\n})","import { delay } from 'delay';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { animated, config, useSpring } from 'react-spring';\r\nimport { fetchUsers } from './api/contributors';\r\nimport './App.css';\r\nimport { ButtonSettings, Card, Settings } from './components';\r\nimport { getRandomArbitrary } from './consts';\r\nimport { About } from './help';\r\nimport { aboutOff, aboutOn, settingsOn, setttingsOff } from './store/actions/appsateActions';\r\nimport { addBlacklist, clearBlacklist, removeBlacklist, setRepo, setUser } from './store/actions/settingsActions';\r\n\r\nfunction App() {\r\n  const repo = useSelector(state => state.settings.repo, shallowEqual);\r\n  const user = useSelector(state => state.settings.user, shallowEqual)\r\n  const blacklist = useSelector(state => [...state.settings.blacklist], shallowEqual)\r\n  const users = useSelector(state => state.users, shallowEqual);\r\n  const dispatch = useDispatch();\r\n  const isSettings = useSelector(state => state.appstate.settings, shallowEqual)\r\n  const isAbout = useSelector(state => state.appstate.about, shallowEqual)\r\n\r\n  const style = useSpring({\r\n    ...config.slow,\r\n    state: isSettings ? 'in' : 'out',\r\n    to: async next => {\r\n      await next({\r\n        transform: 'translateX(0%)',\r\n      });\r\n    },\r\n    from: async next => {\r\n      await delay(700);\r\n      await next({\r\n        transform: 'translateX(-100%)',\r\n      });\r\n    },\r\n  });\r\n  function addToBlack(val) {\r\n    dispatch(addBlacklist(val))\r\n  }\r\n  function deleteFromBlackList(user) {\r\n    dispatch(removeBlacklist(user));\r\n  }\r\n  function changeReviewer(user) {\r\n    dispatch(setUser(user));\r\n  }\r\n  function randomReviewer() {\r\n    let usersToRandomize = users.filter((element) => { return ![...blacklist].includes(element.login) });\r\n    if (usersToRandomize.length > 0) {\r\n      let random = getRandomArbitrary(0, usersToRandomize.length);\r\n      changeReviewer(usersToRandomize[random].login);\r\n    } else {\r\n      alert(\"Нет пользователей для review! Проверьте настройки...\");\r\n    }\r\n  }\r\n  function setAbout(state) {\r\n    state ? dispatch(aboutOn()) : dispatch(aboutOff())\r\n  }\r\n  function setSettingsVisible(state) {\r\n    state ? dispatch(settingsOn()) : dispatch(setttingsOff())\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"buttons\">\r\n        <ButtonSettings text='Настройки' onClick={() => { setSettingsVisible(!isSettings) }} />\r\n        <ButtonSettings text='Рандомный reviewer' onClick={randomReviewer} />\r\n        <ButtonSettings text='Задание' onClick={() => { setAbout(!isAbout); }} />\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <About isAbout={isAbout} />\r\n        <animated.div className=\"sidebar\">\r\n          <Card black={[...blacklist].includes(user)}\r\n            name={user}\r\n            image={users?.find?.(t => t.login === user)?.avatar_url}\r\n          />\r\n          <animated.div style={{ ...style, display: isSettings ? 'block' : 'none' }}>\r\n            <Settings blacklist={[...blacklist]} user={user} repo={repo}\r\n              onNewReviewer={() => {\r\n                //handleUsersFetch(settings.repo);\r\n              }}\r\n              onChangeRepo={(repo) => {\r\n                dispatch(setRepo(repo));\r\n                dispatch(fetchUsers(repo));\r\n              }}\r\n              clearAll={() => {\r\n                dispatch(clearBlacklist())\r\n              }}\r\n              onSaveSettings={(settings) => {\r\n                dispatch(setRepo(repo));\r\n                dispatch(fetchUsers(repo));\r\n              }}\r\n              onAdd={addToBlack}\r\n              onDelete={deleteFromBlackList} />\r\n          </animated.div>\r\n        </animated.div>\r\n        <div className=\"content\">\r\n          {Array.isArray(users) ? users.map((value) => {\r\n            return <Card black={[...blacklist].includes(value.login)} key={value.id} name={value.login} image={value.avatar_url} onBlackList={addToBlack} onRemoveBl={deleteFromBlackList} onClick={changeReviewer} />\r\n          }) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ABOUT_PANEL_OFF, ABOUT_PANEL_ON, SETTINGS_PANEL_OFF, SETTINGS_PANEL_ON } from \"./types\"\r\n\r\nexport const settingsOn = () => ({\r\n    type: SETTINGS_PANEL_ON\r\n})\r\nexport const setttingsOff = () => ({\r\n    type: SETTINGS_PANEL_OFF\r\n})\r\nexport const aboutOn = () => ({\r\n    type: ABOUT_PANEL_ON\r\n})\r\nexport const aboutOff = () => ({\r\n    type: ABOUT_PANEL_OFF\r\n})","export const USERNAME = 'userName';\r\nexport const REPOSITORY = 'repository';\r\nexport const BLACKLIST = 'blacklist';\r\n\r\nexport function getSettings() {\r\n    let settings = {};\r\n    let user = localStorage.getItem(USERNAME);\r\n    let repo = localStorage.getItem(REPOSITORY);\r\n    let blacklist = localStorage.getItem(BLACKLIST);\r\n    if (user == null) {\r\n        setNullSettings();\r\n    }\r\n    settings.user = user ? user : 'Pre77';\r\n    settings.repo = repo ? repo : 'https://github.com/Pre77/hh-school-react-2021';\r\n    settings.blacklist = blacklist ? JSON.parse(blacklist) : [];\r\n    return settings;\r\n}\r\nexport function setSettings(settings) {\r\n    if (settings.user) localStorage.setItem(USERNAME, settings.user);\r\n    if (settings.repo) localStorage.setItem(REPOSITORY, settings.repo);\r\n    if (settings.blacklist) localStorage.setItem(BLACKLIST, JSON.stringify(settings.blacklist));\r\n    return;\r\n}\r\nexport function setNullSettings() {\r\n    localStorage.setItem(USERNAME, 'Pre77');\r\n    localStorage.setItem(REPOSITORY, 'https://github.com/Pre77/hh-school-react-2021');\r\n    localStorage.setItem(BLACKLIST, JSON.stringify([]));\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ABOUT_PANEL_OFF, ABOUT_PANEL_ON, SETTINGS_PANEL_OFF, SETTINGS_PANEL_ON } from '../actions/types';\r\nconst appstate = (state = { about: false, settings: false }, action) => {\r\n     switch (action.type) {\r\n          case SETTINGS_PANEL_ON:\r\n               state.settings = true;\r\n               return state;\r\n          case SETTINGS_PANEL_OFF:\r\n               state.settings = false;\r\n               return state;\r\n          case ABOUT_PANEL_ON:\r\n               state.about = true;\r\n               return state;\r\n          case ABOUT_PANEL_OFF:\r\n               state.about = false;\r\n               return state;\r\n          default:\r\n               return state\r\n     }\r\n}\r\n\r\nexport default appstate","import { DEFAULT_BLACKLIST, DEFAULT_REPO, DEFAULT_USER } from \"../../consts\";\r\nimport { ADD_BLACKLIST, CLEAR_BLACKLIST, REMOVE_BLACKLIST, SET_REPO, SET_USER } from \"../actions\";\r\n\r\nconst settings = (state = { repo: DEFAULT_REPO, user: DEFAULT_USER, blacklist: DEFAULT_BLACKLIST }, action) => {\r\n    switch (action.type) {\r\n        case SET_REPO:\r\n            state.repo = action.payload;\r\n            return state;\r\n        case ADD_BLACKLIST:\r\n            let i = state.blacklist.indexOf(action.payload);\r\n            if (i < 0) {\r\n                state.blacklist.push(action.payload);\r\n            }\r\n            return state;\r\n        case REMOVE_BLACKLIST:\r\n            let v = state.blacklist.indexOf(action.payload);\r\n            if (v >= 0) {\r\n                state.blacklist.splice(v, 1);\r\n            }\r\n            return state;\r\n        case CLEAR_BLACKLIST:\r\n            state.blacklist = [];\r\n            return state;\r\n        case SET_USER:\r\n            state.user = action.payload;\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default settings","import { RECEIVE_USERS } from '../../api/contributors';\r\n\r\nconst users = (state = [], action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            state = action.users;\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default users","import { combineReducers } from 'redux';\r\nimport appstate from './appstate';\r\nimport settings from './settings';\r\nimport users from './users';\r\n\r\nexport const reducer = combineReducers({settings, appstate, users});","import {\r\n  applyMiddleware, compose, createStore\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { getContributors } from '../api/contributors';\r\nimport { getSettings } from '../localSave';\r\nimport { reducer } from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\nconst middleware = [thunk];\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(...middleware),\r\n);\r\n\r\nlet st = getSettings();\r\n\r\nconst initialStore = {\r\n  settings: st,\r\n  appstate: { settings: false, about: false },\r\n  users: Object.values(getContributors(st.repo))\r\n};\r\n\r\nconst store = createStore(\r\n  reducer, initialStore,\r\n  enhancer\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { fetchUsers } from './api/contributors';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { setSettings } from './localSave';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nstore.dispatch(fetchUsers(store.getState().settings.repo));\r\nstore.subscribe(() => {\r\n  let settings = store.getState().settings;\r\n  setSettings(settings);\r\n});\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}